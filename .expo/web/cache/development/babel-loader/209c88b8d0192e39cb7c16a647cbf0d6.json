{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/advaitsharma/Desktop/whitehatjr/CurriQlum/screens/WelcomeScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport db from \"../config\";\nimport firebase from 'firebase';\nimport { RFValue } from 'react-native-responsive-fontsize';\n\nvar WelcomeScreen = function (_React$Component) {\n  _inherits(WelcomeScreen, _React$Component);\n\n  var _super = _createSuper(WelcomeScreen);\n\n  function WelcomeScreen() {\n    var _this;\n\n    _classCallCheck(this, WelcomeScreen);\n\n    _this = _super.call(this);\n\n    _this.userSignUp = function (emailId, password, confirmPassword) {\n      if (password !== confirmPassword) {\n        return Alert.alert(\"Password doesn't match\\nCheck your password.\");\n      } else firebase.auth().createUserWithEmailAndPassword(emailId, password).then(function () {\n        db.collection('users').add({\n          first_name: _this.state.firstName,\n          last_name: _this.state.lastName,\n          contact: _this.state.contact,\n          grade: _this.state.grade,\n          school_name: _this.state.schoolName,\n          class_name: _this.state.className,\n          roll_no: _this.state.rollNo\n        });\n        return Alert.alert('User Added Successfully', '', [{\n          text: 'Continue',\n          onPress: function onPress() {\n            return _this.setState({\n              \"isModalVisible\": false\n            });\n          }\n        }]);\n      });\n    };\n\n    _this.userLogin = function (emailId, password) {\n      firebase.auth().signInWithEmailAndPassword(emailId, password).then(function () {\n        return Alert.alert('User Added Successfully');\n      }).catch(function (error) {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        return Alert.alert('Please Enter Correct Password\\nOr see if you have signed up' + error.message);\n      });\n    };\n\n    _this.showModal = function () {\n      return React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: _this.state.isModalVisible,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        style: {\n          flex: 1,\n          backgroundColor: '#fff'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 0.05,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.modalTitle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      }, \"Sign Up\")), React.createElement(View, {\n        style: {\n          flex: 0.95\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"First Name\",\n        maxLength: 10,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            firstName: text\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Last Name\",\n        maxLength: 8,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            lastName: text\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Contact\",\n        maxLength: 10,\n        keyboardType: 'numeric',\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            contact: text\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Email\",\n        keyboardType: 'email-address',\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            emailId: text\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            password: text\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Confirm Password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            confirmPassword: text\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Grade\",\n        maxLength: 10,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            grade: text\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"School Name\",\n        maxLength: 10,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            schoolName: text\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Class Name\",\n        maxLength: 10,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            className: text\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Roll Number\",\n        maxLength: 10,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            rollNo: text\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 0.2,\n          alignItems: \"center\"\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.registerButton,\n        onPress: function onPress() {\n          return _this.userSignUp(_this.state.emailId, _this.state.password, _this.state.confirmPassword);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.registerButtonText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }\n      }, \"Register\")), React.createElement(Text, {\n        style: styles.cancelButtonText,\n        onPress: function onPress() {\n          _this.setState({\n            isModalVisible: false\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }\n      }, \"Cancel\")))));\n    };\n\n    _this.state = {\n      emailId: '',\n      password: '',\n      confirmPassword: '',\n      firstName: '',\n      lastName: '',\n      contact: '',\n      grade: '',\n      schoolName: '',\n      className: '',\n      rollNo: '',\n      isModalVisible: 'false'\n    };\n    return _this;\n  }\n\n  _createClass(WelcomeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n          paddingTop: 240\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }\n      }, this.showModal(), React.createElement(TextInput, {\n        style: styles.EmailIdTextInput,\n        placeholder: \"Email Id\",\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            emailId: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        style: styles.PasswordTextInput,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            password: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.LoginButton,\n        onPress: function onPress() {\n          _this2.userLogin(_this2.state.emailId, _this2.state.password);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.LoginButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }\n      }, \"Login\")), React.createElement(TouchableOpacity, {\n        style: styles.SignUpButton,\n        onPress: function onPress() {\n          _this2.userSignUp(_this2.state.emailId, _this2.state.password);\n\n          _this2.setState({\n            \"isModalVisible\": true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.SignUpButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }\n      }, \"Sign Up\"))));\n    }\n  }]);\n\n  return WelcomeScreen;\n}(React.Component);\n\nexport { WelcomeScreen as default };\nvar styles = StyleSheet.create({\n  EmailIdTextInput: {\n    width: 300,\n    height: 40,\n    borderBottomWidth: 1.5,\n    borderColor: '#00FFFF',\n    fontSize: 20,\n    margin: 10,\n    paddingLeft: 10\n  },\n  PasswordTextInput: {\n    width: 300,\n    height: 40,\n    borderBottomWidth: 1.5,\n    borderColor: '#00FFFF',\n    fontSize: 20,\n    margin: 10,\n    paddingLeft: 10\n  },\n  LoginButton: {\n    width: 200,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 10,\n    marginTop: 30,\n    backgroundColor: \"#00FFFF\"\n  },\n  LoginButtonText: {\n    color: '#FFFF00',\n    fontWeight: '2000',\n    fontSize: 20\n  },\n  SignUpButton: {\n    width: 200,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 10,\n    marginTop: 30,\n    backgroundColor: \"#00FFFF\"\n  },\n  SignUpButtonText: {\n    color: '#FFFF00',\n    fontWeight: '2000',\n    fontSize: 20\n  },\n  formTextInput: {\n    width: \"90%\",\n    height: RFValue(45),\n    padding: RFValue(10),\n    borderWidth: 1,\n    borderRadius: 2,\n    borderColor: \"#00FFFF\",\n    paddingBottom: RFValue(10),\n    marginLeft: RFValue(20),\n    marginBottom: RFValue(14)\n  },\n  registerButton: {\n    width: \"75%\",\n    height: RFValue(50),\n    marginTop: RFValue(20),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(3),\n    backgroundColor: \"#00FFFF\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: RFValue(10)\n  },\n  registerButtonText: {\n    fontSize: RFValue(23),\n    fontWeight: \"bold\",\n    color: \"#FFFF00\"\n  },\n  cancelButtonText: {\n    fontSize: RFValue(20),\n    fontWeight: \"bold\",\n    color: \"#FFFF00\",\n    marginTop: RFValue(10)\n  },\n  label: {\n    fontSize: RFValue(13),\n    color: \"#717D7E\",\n    fontWeight: \"bold\",\n    paddingLeft: RFValue(10),\n    marginLeft: RFValue(20)\n  },\n  modalTitle: {\n    fontSize: RFValue(30),\n    color: '#32867d',\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["/Users/advaitsharma/Desktop/whitehatjr/CurriQlum/screens/WelcomeScreen.js"],"names":["React","Component","db","firebase","RFValue","WelcomeScreen","userSignUp","emailId","password","confirmPassword","Alert","alert","auth","createUserWithEmailAndPassword","then","collection","add","first_name","state","firstName","last_name","lastName","contact","grade","school_name","schoolName","class_name","className","roll_no","rollNo","text","onPress","setState","userLogin","signInWithEmailAndPassword","catch","error","errorCode","code","errorMessage","message","showModal","isModalVisible","flex","backgroundColor","justifyContent","alignItems","styles","modalTitle","formTextInput","registerButton","registerButtonText","cancelButtonText","paddingTop","EmailIdTextInput","PasswordTextInput","LoginButton","LoginButtonText","SignUpButton","SignUpButtonText","StyleSheet","create","width","height","borderBottomWidth","borderColor","fontSize","margin","paddingLeft","borderRadius","marginTop","color","fontWeight","padding","borderWidth","paddingBottom","marginLeft","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","label"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, StyleSheet, Text, TouchableOpacity,TextInput, Alert, Modal, ScrollView, KeyboardAvoidingView} from 'react-native';\nimport db from '../config';\nimport firebase from 'firebase';\nimport { RFValue } from 'react-native-responsive-fontsize';\n\nexport default class WelcomeScreen extends React.Component{\n\n    constructor() {\n        super();\n        this.state={\n            emailId: '',\n            password: '',\n            confirmPassword: '',\n            firstName: '',\n            lastName: '',\n            contact: '',\n            grade: '',\n            schoolName: '',\n            className: '',\n            rollNo: '',\n            isModalVisible: 'false'\n          }\n    }\n\n    userSignUp = (emailId, password, confirmPassword) =>{\n        if(password !== confirmPassword) {\n            return Alert.alert(\"Password doesn't match\\nCheck your password.\")\n        }else(\n            firebase.auth().createUserWithEmailAndPassword(emailId, password)\n            .then(()=>{\n                db.collection('users').add({\n                    first_name: this.state.firstName,\n                    last_name: this.state.lastName,\n                    contact: this.state.contact,\n                    grade: this.state.grade,\n                    school_name: this.state.schoolName,\n                    class_name: this.state.className,\n                    roll_no: this.state.rollNo\n                })\n                return  Alert.alert(\n                    'User Added Successfully',\n                    '',\n                    [\n                      {text: 'Continue', onPress: () => this.setState({\"isModalVisible\": false})},\n                    ]\n                );\n            })\n        )\n        \n    }\n   \n    userLogin = (emailId, password)=>{\n        firebase.auth().signInWithEmailAndPassword(emailId, password)\n        .then(()=>{\n            return  Alert.alert('User Added Successfully');\n        })\n        .catch((error)=> {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            return Alert.alert('Please Enter Correct Password\\nOr see if you have signed up'+error.message)\n        })\n    }\n\n    showModal = ()=>{\n        return(\n            <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={this.state.isModalVisible}\n            >\n            \n                <ScrollView style={{ flex:1, backgroundColor: '#fff'}}>\n\n                <KeyboardAvoidingView>\n                    <View style = {{ flex: 0.05, justifyContent: \"center\", alignItems: \"center\"}}>\n                        <Text style={styles.modalTitle}>Sign Up</Text>\n                    </View>\n                    <View style={{ flex: 0.95 }}>\n                        <TextInput\n                            style={styles.formTextInput}\n                            placeholder ={\"First Name\"}\n                            maxLength ={10}\n                            onChangeText={(text)=>{\n                            this.setState({\n                                firstName: text\n                            })\n                            }}\n                        />\n                        <TextInput\n                            style={styles.formTextInput}\n                            placeholder ={\"Last Name\"}\n                            maxLength ={8}\n                            onChangeText={(text)=>{\n                            this.setState({\n                                lastName: text\n                            })\n                            }}\n                        />\n                        <TextInput\n                            style={styles.formTextInput}\n                            placeholder ={\"Contact\"}\n                            maxLength ={10}\n                            keyboardType={'numeric'}\n                            onChangeText={(text)=>{\n                            this.setState({\n                                contact: text\n                            })\n                            }}\n                        />\n                        <TextInput\n                            style={styles.formTextInput}\n                            placeholder ={\"Email\"}\n                            keyboardType ={'email-address'}\n                            onChangeText={(text)=>{\n                            this.setState({\n                                emailId: text\n                            })\n                            }}\n                        />\n                        <TextInput\n                            style={styles.formTextInput}\n                            placeholder ={\"Password\"}\n                            secureTextEntry = {true}\n                            onChangeText={(text)=>{\n                            this.setState({\n                                password: text\n                            })\n                            }}\n                        />\n                        <TextInput\n                            style={styles.formTextInput}\n                            placeholder ={\"Confirm Password\"}\n                            secureTextEntry = {true}\n                            onChangeText={(text)=>{\n                            this.setState({\n                                confirmPassword: text\n                            })\n                            }}\n                        />\n                        <TextInput\n                            style={styles.formTextInput}\n                            placeholder ={\"Grade\"}\n                            maxLength ={10}\n                            onChangeText={(text)=>{\n                            this.setState({\n                                grade: text\n                            })\n                            }}\n                        />\n                        <TextInput\n                            style={styles.formTextInput}\n                            placeholder ={\"School Name\"}\n                            maxLength ={10}\n                            onChangeText={(text)=>{\n                            this.setState({\n                                schoolName: text\n                            })\n                            }}\n                        />\n                        <TextInput\n                            style={styles.formTextInput}\n                            placeholder ={\"Class Name\"}\n                            maxLength ={10}\n                            onChangeText={(text)=>{\n                            this.setState({\n                                className: text\n                            })\n                            }}\n                        />\n                        <TextInput\n                            style={styles.formTextInput}\n                            placeholder ={\"Roll Number\"}\n                            maxLength ={10}\n                            onChangeText={(text)=>{\n                            this.setState({\n                                rollNo: text\n                            })\n                            }}\n                        />\n                        </View>\n                        <View style={{ flex: 0.2, alignItems: \"center\" }}>\n                            <TouchableOpacity\n                                style={styles.registerButton}\n                                onPress={()=>\n                                    this.userSignUp(this.state.emailId, this.state.password, this.state.confirmPassword)\n                                }\n                            >\n                            <Text style={styles.registerButtonText}>Register</Text>\n                        </TouchableOpacity>\n                        \n                        <Text\n                            style={styles.cancelButtonText}\n                            onPress={() => {\n                                this.setState({ isModalVisible: false });\n                            }}\n                        >\n                            Cancel\n                        </Text>\n                    </View>\n                    </KeyboardAvoidingView>\n                </ScrollView>    \n            </Modal>\n        )\n      }\n\n    render(){\n        return(\n            <View style = {{flex:1 }}>\n                <View style = {{flex:1, justifyContent: 'center', alignItems: 'center', paddingTop: 240}}>\n                    {\n                    this.showModal()\n                  }\n                    <TextInput \n                        style = {styles.EmailIdTextInput}\n                        placeholder = \"Email Id\"\n                        keyboardType ='email-address'\n                        onChangeText={(text)=>{\n                            this.setState({\n                              emailId: text\n                            })\n                        }}\n                    />\n\n                    <TextInput\n                        style = {styles.PasswordTextInput}\n                        placeholder = \"Password\"\n                        secureTextEntry = {true}\n                        onChangeText={(text)=>{\n                            this.setState({\n                              password: text\n                            })\n                        }}\n                    />\n\n                    <TouchableOpacity style = {styles.LoginButton}\n                        onPress = {()=>{\n                            this.userLogin(this.state.emailId, this.state.password)\n                        }}\n                    >\n                        <Text style = {styles.LoginButtonText}>Login</Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity style = {styles.SignUpButton}\n                        onPress = {()=>{\n                            this.userSignUp(this.state.emailId, this.state.password)\n                            this.setState({\"isModalVisible\": true})\n                        }}\n                    >\n                        <Text style = {styles.SignUpButtonText}>Sign Up</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    EmailIdTextInput: {\n        width: 300,\n        height: 40,\n        borderBottomWidth: 1.5,\n        borderColor : '#00FFFF',\n        fontSize: 20,\n        margin:10,\n        paddingLeft:10\n    },\n    PasswordTextInput: {\n        width: 300,\n        height: 40,\n        borderBottomWidth: 1.5,\n        borderColor : '#00FFFF',\n        fontSize: 20,\n        margin:10,\n        paddingLeft:10\n    },\n    LoginButton: {\n        width:200,\n        height:40,\n        alignItems:'center',\n        justifyContent:'center',\n        borderRadius:10,\n        marginTop:30,\n        backgroundColor: \"#00FFFF\",\n    },\n\n    LoginButtonText: {\n        color:'#FFFF00',\n        fontWeight:'2000',\n        fontSize:20\n    },\n\n    SignUpButton: {\n        width:200,\n        height:40,\n        alignItems:'center',\n        justifyContent:'center',\n        borderRadius:10,\n        marginTop:30,\n        backgroundColor: \"#00FFFF\",\n    },\n\n    SignUpButtonText: {\n        color:'#FFFF00',\n        fontWeight:'2000',\n        fontSize:20\n    },\n    formTextInput:{\n        width: \"90%\",\n        height: RFValue(45),\n        padding: RFValue(10),\n        borderWidth: 1,\n        borderRadius: 2,\n        borderColor: \"#00FFFF\",\n        paddingBottom: RFValue(10),\n        marginLeft: RFValue(20),\n        marginBottom: RFValue(14)\n    },\n    registerButton:{\n      width: \"75%\",\n      height: RFValue(50),\n      marginTop: RFValue(20),\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      borderRadius: RFValue(3),\n      backgroundColor: \"#00FFFF\",\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 8\n      },\n      shadowOpacity: 0.44,\n      shadowRadius: 10.32,\n      elevation: 16,\n      marginTop: RFValue(10)\n    },\n    registerButtonText: {\n      fontSize: RFValue(23),\n      fontWeight: \"bold\",\n      color: \"#FFFF00\"\n    },\n    cancelButtonText: {\n      fontSize: RFValue(20),\n      fontWeight: \"bold\",\n      color: \"#FFFF00\",\n      marginTop: RFValue(10),\n    },\n    label: {\n        fontSize: RFValue(13),\n        color: \"#717D7E\",\n        fontWeight: \"bold\",\n        paddingLeft: RFValue(10),\n        marginLeft: RFValue(20)\n    },\n    modalTitle :{   \n        fontSize:RFValue(30),\n        color:'#32867d',\n        fontWeight: \"bold\",\n    },\n})"]},"metadata":{},"sourceType":"module"}